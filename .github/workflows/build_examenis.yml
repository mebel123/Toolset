name: Examenis Build Server
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy Environment: [prod]'
        required: true
        default: 'prod'

jobs:
  build:
    environment:
      name: ${{ github.event.inputs.environment || 'prod' }}
    env:
      repositoryServer: ${{ secrets.EXAMENIS_REPO_SERVER }}
      repositoryClient: ${{ secrets.EXAMENIS_REPO_CLIENT }}
      sshkey: ${{ secrets.SSH_KEY }}
      sshpwd: ${{ secrets.SSH_PWD }}
      KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
    name: Build image
    runs-on: [ self-hosted ]
    steps:
      - name: prepare hello world
        continue-on-error: true
        run: |
          ls -rtl
          echo "hello world"
          rm -rf vueexamenis
          rm -rf examenis
      - uses: cardoe/ssh-agent-deploy-key@v1
        with:
          # SSH private keys to load into the ssh-agent
          ssh-private-key: |
            ${{secrets.SSH_KEY}}
          ssh-known-hosts: |
            ${{secrets.KNOWN_HOSTS}}
      - name: checkout source code of examenis client
        run: |
          git clone $repositoryClient
      - name: checkout source code
        run: |
          git clone $repositoryServer
      - uses: actions/setup-node@v1
        continue-on-error: true
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - name: create participant client
        run: |
          ls
          cd vueexamenis
          cd sources
          ls
          pwd
          chmod +x createLocalCI.sh
          ./createLocalCI.sh
      - name: create examenis server docker
        run: |
          pwd
          cd examenis
          cd sources
          chmod +x createDockerCI.sh
          ./createDockerCI.sh
        shell: bash

